name: Is Ready To Merge

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  can_merge:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      #    - uses: docker://holochain/holonix:latest.develop
      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install recent bash on macos, and set as NIX_BUILD_SHELL # needed by macos, which has an older bash incompatible with nix
        if: ${{ runner.os == 'macOS' }}
        run: echo "NIX_BUILD_SHELL=$(nix-build -A bashInteractive '<nixpkgs>')/bin/bash" >> $GITHUB_ENV

      # Necessary for now for the nix cache:
      # https://github.com/actions/cache/issues/133#issuecomment-599102035
      # - name: Fix /nix/store directory permissions
      #   run: sudo chown -R $(whoami):$(id -ng) /nix/store

      # # Necessary for now for the cargo cache:
      # # https://github.com/actions/cache/issues/133#issuecomment-599102035
      # - name: Fix ~/.cargo directory permissions
      #   run: sudo chown -R $(whoami):$(id -ng) ~/.cargo && sudo chown -R $(whoami):$(id -ng) ~/.cargo/registry

      # - name: Cache nix
      #   uses: actions/cache@v1
      #   with:
      #     path: /nix/store
      #     key: ${{ runner.os }}-nix-store-${{ hashFiles('**/*.nix') }}

      # - name: Cache cargo registry
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.cargo/registry
      #     key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      # - name: Cache cargo index
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.cargo/git
      #     key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      # - name: Cache cargo build
      #   uses: actions/cache@v1
      #   with:
      #     path: target
      #     key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Prepare Nix environment
        run: nix-shell --command "echo Completed"

      - name: Merge Test
        run: nix-shell --run 'hc-merge-test'
